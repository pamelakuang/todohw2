{"ast":null,"code":"var _jsxFileName = \"/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class ItemScreen extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item_form_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Items\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"item_description_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"item_description_textfield\",\n      defaultValue: this.props.todoItem ? this.props.todoItem.description : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"item_assigned_to_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Assigned to: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"item_assigned_to_textfield\",\n      defaultValue: this.props.todoItem ? this.props.todoItem.assigned_to : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"item_due_date_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Due Date: \"), React.createElement(\"input\", {\n      type: \"date\",\n      id: \"item_due_date_picker\",\n      defaultValue: this.props.todoItem ? this.props.todoItem.due_date : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"item_completed_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Completed: \"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"item_completed_checkbox\",\n      defaultChecked: this.props.todoItem ? this.props.todoItem.completed : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"item_form_submit_button\",\n      onClick: this.props.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      id: \"item_form_cancel_button\",\n      onClick: this.props.cancelItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\nItemScreen.propTypes = {\n  currentScreen: PropTypes.string.isRequired,\n  todoItem: PropTypes.object.isRequired\n};\nexport default ItemScreen;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/components/item_screen/ItemScreen.js"],"names":["React","Component","PropTypes","ItemScreen","render","props","todoItem","description","assigned_to","due_date","completed","addItem","cancelItemChanges","propTypes","currentScreen","string","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACtCG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAE,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,yBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,4BAAtB;AAAmD,MAAA,YAAY,EAAG,KAAKC,KAAL,CAAWC,QAAZ,GAAwB,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,WAA5C,GAAyD,IAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,yBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,4BAAtB;AAAmD,MAAA,YAAY,EAAG,KAAKF,KAAL,CAAWC,QAAZ,GAAwB,KAAKD,KAAL,CAAWC,QAAX,CAAoBE,WAA5C,GAAyD,IAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,sBAAtB;AAA6C,MAAA,YAAY,EAAG,KAAKH,KAAL,CAAWC,QAAZ,GAAwB,KAAKD,KAAL,CAAWC,QAAX,CAAoBG,QAA5C,GAAsD,IAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAbJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,yBAA1B;AAAoD,MAAA,cAAc,EAAG,KAAKJ,KAAL,CAAWC,QAAZ,GAAwB,KAAKD,KAAL,CAAWC,QAAX,CAAoBI,SAA5C,GAAuD,KAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAjBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,yBAAX;AACI,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI;AAAQ,MAAA,EAAE,EAAC,yBAAX;AACI,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,iBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CArBJ,CADJ,CADJ;AAgCH;;AAlCqC;AAqC1CT,UAAU,CAACU,SAAX,GAAuB;AACnBC,EAAAA,aAAa,EAAEZ,SAAS,CAACa,MAAV,CAAiBC,UADb;AAEnBV,EAAAA,QAAQ,EAAEJ,SAAS,CAACe,MAAV,CAAiBD;AAFR,CAAvB;AAKA,eAAeb,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class ItemScreen extends Component {\n    render() {\n        return (\n            <div id ='todo_item' >\n                <div id=\"item_form_container\">\n                    \n                    <h1>Items</h1>\n                    \n                    <p>\n                        <span id=\"item_description_prompt\">Description: </span>\n                        <input type=\"text\" id=\"item_description_textfield\" defaultValue={(this.props.todoItem) ? this.props.todoItem.description: null}/>\n                    </p>\n\n                    <p>\n                        <span id=\"item_assigned_to_prompt\" >Assigned to: </span>\n                        <input type=\"text\" id=\"item_assigned_to_textfield\" defaultValue={(this.props.todoItem) ? this.props.todoItem.assigned_to: null}/>\n                    </p>\n                    <p>\n                        <span id=\"item_due_date_prompt\">Due Date: </span>\n                        <input type=\"date\" id=\"item_due_date_picker\" defaultValue={(this.props.todoItem) ? this.props.todoItem.due_date: null}/>\n                    </p>\n                    <p>\n                        <span id=\"item_completed_prompt\" >Completed: </span>\n                        <input type=\"checkbox\" id=\"item_completed_checkbox\" defaultChecked={(this.props.todoItem) ? this.props.todoItem.completed: false}/>\n                    </p>\n                    <p>\n                        <button id=\"item_form_submit_button\"\n                            onClick={this.props.addItem}>Submit</button>\n                        <button id=\"item_form_cancel_button\"\n                            onClick={this.props.cancelItemChanges}>Cancel</button>\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nItemScreen.propTypes = {\n    currentScreen: PropTypes.string.isRequired,\n    todoItem: PropTypes.object.isRequired\n}\n\nexport default ItemScreen\n"]},"metadata":{},"sourceType":"module"}