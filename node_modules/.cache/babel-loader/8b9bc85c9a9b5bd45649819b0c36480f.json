{"ast":null,"code":"//import React, { Component } from 'react'\nimport jsTPS_Transaction from './jsTPS_Transaction';\n\nclass jsTPS {\n  //export class jsTPS extends Component {\n  constructor() {\n    this.isPerformingDo = () => {\n      return this.state.performingDo;\n    };\n\n    this.isPerformingUndo = () => {\n      return this.state.performingUndo;\n    };\n\n    this.addTransaction = transaction => {\n      if (this.state.mostRecentTransaction < 0 || this.state.mostRecentTransaction < this.state.transactions.length - 1) {\n        for (let i = this.state.transactions.length - 1; i > this.state.mostRecentTransaction; i--) {\n          this.state.transactions.splice(i, 1);\n        }\n      }\n\n      this.state.transactions.push(transaction);\n      doTransaction();\n    };\n\n    this.doTransaction = () => {\n      if (hasTransactionToRedo()) {\n        this.setState({\n          performingDo: true\n        });\n        var transaction = this.state.transactions[this.state.mostRecentTransaction + 1];\n        transaction.doTransaction();\n        this.setState({\n          mostRecentTransaction: this.state.mostRecentTransaction + 1\n        });\n        this.setState({\n          performingDo: false\n        });\n      }\n    };\n\n    this.peekUndo = () => {\n      if (hasTransactionToUndo()) {\n        return this.state.transactions[this.state.mostRecentTransaction];\n      } else return null;\n    };\n\n    this.peekDo = () => {\n      if (hasTransactionToRedo()) {\n        return this.state.transactions[this.state.mostRecentTransaction + 1];\n      } else return null;\n    };\n\n    this.undoTransaction = () => {\n      if (hasTransactionToUndo()) {\n        this.setState({\n          performingUndo: true\n        });\n        var transaction = this.state.transactions[this.state.mostRecentTransaction];\n        transaction.undoTransaction();\n        this.state.mostRecentTransaction--;\n        this.state.performingUndo = false;\n      }\n    };\n\n    this.clearAllTransactions = () => {\n      this.setState({\n        transactions: []\n      });\n      this.setState({\n        mostRecentTransaction: -1\n      });\n    };\n\n    this.getSize = () => {\n      return this.state.transactions.length;\n    };\n\n    this.getRedoSize = () => {\n      return this.getSize() - this.state.mostRecentTransaction - 1;\n    };\n\n    this.getUndoSize = () => {\n      return this.state.mostRecentTransaction + 1;\n    };\n\n    this.hasTransactionToUndo = () => {\n      return this.state.mostRecentTransaction >= 0;\n    };\n\n    this.hasTransactionToRedo = () => {\n      return this.state.mostRecentTransaction < this.state.transactions.length - 1;\n    };\n\n    this.toString = () => {\n      var text = \"--Number of Transactions: \" + this.state.transactions.length + \"\\n\";\n      text += \"--Current Index on Stack: \" + this.state.mostRecentTransaction + \"\\n\";\n      text += \"--Current Transaction Stack:\\n\";\n\n      for (let i = 0; i <= this.state.mostRecentTransaction; i++) {\n        var jT = this.state.transactions[i];\n        text += \"----\" + jT.toString() + \"\\n\";\n      }\n\n      return text;\n    };\n\n    performingDo = false;\n    performingUndo = false;\n    transactions = [];\n    mostRecentTransaction = -1;\n  }\n\n}\n/*class ListNameChange_Transaction {\n\n    nameChangeList = [];\n    currentLists = [];\n    constructor(initName, list) {\n        this.nameChangeList.push(initName);\n        this.currentLists.push(list);\n    }\n    doTransaction = () => {\n\n    }\n\n    undoTransaction = () => {\n        \n    }\n}*/\n\n\nclass MoveUp_Transaction {\n  constructor(todoList, todoItem) {\n    this.currentList = null;\n    this.currentItem = null;\n\n    this.doTransaction = () => {\n      let index = this.currentList.items.indexOf(this.todoItem);\n      let temp = this.currentList.items[index];\n      this.currentList.items[index] = this.currentList.items[index - 1];\n      this.currentList.items[index - 1] = temp; // move up \n    };\n\n    this.undoTransaction = () => {\n      let index = this.currentList.items.indexOf(this.todoItem);\n      let temp = this.currentList.items[index];\n      this.currentList.items[index] = this.currentList.items[index + 1];\n      this.currentList.items[index + 1] = temp; // move down \n    };\n\n    this.currentList = todoList;\n    this.currentItem = todoItem;\n  }\n\n}\n\nclass MoveDown_Transaction {\n  constructor(todoList, todoItem) {\n    this.currentList = null;\n    this.currentItem = null;\n\n    this.doTransaction = () => {\n      let index = this.currentList.items.indexOf(this.todoItem);\n      let temp = this.currentList.items[index];\n      this.currentList.items[index] = this.currentList.items[index + 1];\n      this.currentList.items[index + 1] = temp; // move down \n    };\n\n    this.undoTransaction = () => {\n      let index = this.currentList.items.indexOf(this.todoItem);\n      let temp = this.currentList.items[index];\n      this.currentList.items[index] = this.currentList.items[index - 1];\n      this.currentList.items[index - 1] = temp; // move up \n    };\n\n    this.currentList = todoList;\n    this.currentItem = todoItem;\n  }\n\n}\n\nclass ListItemRemoval_Transaction {\n  constructor(todoList, todoItem, index) {\n    this.currentList = null;\n    this.itemRemoved = null;\n    this.indexOfItem = null;\n\n    this.doTransaction = () => {\n      this.currentList.items.splice(this.indexOfItem, 1);\n    };\n\n    this.undoTransaction = () => {\n      this.currentList.items.splice(this.indexOfItem, 0, this.itemRemoved);\n    };\n\n    this.currentList = todoList;\n    this.itemRemoved = todoItem;\n    this.indexOfItem = index;\n  }\n\n}\n\nclass ListItemEdit_Transaction {}\n\nexport default jsTPS;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/jTPS/src/jtps/jsTPS.js"],"names":["jsTPS_Transaction","jsTPS","constructor","isPerformingDo","state","performingDo","isPerformingUndo","performingUndo","addTransaction","transaction","mostRecentTransaction","transactions","length","i","splice","push","doTransaction","hasTransactionToRedo","setState","peekUndo","hasTransactionToUndo","peekDo","undoTransaction","clearAllTransactions","getSize","getRedoSize","getUndoSize","toString","text","jT","MoveUp_Transaction","todoList","todoItem","currentList","currentItem","index","items","indexOf","temp","MoveDown_Transaction","ListItemRemoval_Transaction","itemRemoved","indexOfItem","ListItemEdit_Transaction"],"mappings":"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","sourcesContent":["//import React, { Component } from 'react'\nimport jsTPS_Transaction from './jsTPS_Transaction'\n\nclass jsTPS {\n//export class jsTPS extends Component {\n    constructor() {\n        performingDo=false;\n        performingUndo=false;\n        transactions = [];\n        mostRecentTransaction = -1;\n    }\n\n    isPerformingDo = () => {\n        return this.state.performingDo;\n    }\n\n    isPerformingUndo = () => {\n        return this.state.performingUndo;\n    }\n\n    addTransaction = (transaction) => {\n        if ((this.state.mostRecentTransaction < 0) || this.state.mostRecentTransaction < (this.state.transactions.length - 1)) {\n            for (let i = this.state.transactions.length-1; i > this.state.mostRecentTransaction; i--) {\n                this.state.transactions.splice(i, 1);\n            }\n        }\n        this.state.transactions.push(transaction);\n        doTransaction();\n    }\n    \n    doTransaction = () => {\n        if(hasTransactionToRedo()) {\n            this.setState({performingDo: true});\n            var transaction = this.state.transactions[this.state.mostRecentTransaction+1];\n            transaction.doTransaction();\n            this.setState({mostRecentTransaction: this.state.mostRecentTransaction+1});\n            this.setState({performingDo: false});\n        }\n    }\n    peekUndo = () => {\n        if(hasTransactionToUndo()) {\n            return this.state.transactions[this.state.mostRecentTransaction];\n        }\n        else\n            return null;\n    }\n    peekDo = () => {\n        if (hasTransactionToRedo()) {\n            return this.state.transactions[this.state.mostRecentTransaction+1];\n        }\n        else \n            return null;\n    }\n\n    undoTransaction = () => {\n        if (hasTransactionToUndo()) {\n            this.setState({performingUndo:true});\n            var transaction = this.state.transactions[this.state.mostRecentTransaction];\n            transaction.undoTransaction();\n            this.state.mostRecentTransaction--;\n            this.state.performingUndo = false;\n        }\n    }\n    clearAllTransactions = () => {\n        this.setState({transactions: [] });\n        this.setState({mostRecentTransaction: -1});\n    }\n    \n    getSize = () => {\n        return this.state.transactions.length;\n    }\n\n    getRedoSize = () => {\n        return this.getSize() - this.state.mostRecentTransaction - 1;\n    }\n    \n    getUndoSize = () => {\n        return this.state.mostRecentTransaction + 1;\n    }\n    \n    hasTransactionToUndo = () => {\n        return this.state.mostRecentTransaction >= 0;\n    }\n\n    hasTransactionToRedo = () => {\n        return this.state.mostRecentTransaction < (this.state.transactions.length-1);\n    }\n    \n    toString = () => {\n        var text = \"--Number of Transactions: \" + this.state.transactions.length + \"\\n\";\n        text += \"--Current Index on Stack: \" + this.state.mostRecentTransaction + \"\\n\";\n        text += \"--Current Transaction Stack:\\n\";\n        for (let i = 0; i <= this.state.mostRecentTransaction; i++) {\n            var jT = this.state.transactions[i];\n            text += \"----\" + jT.toString() + \"\\n\";\n        }\n        return text;\n    }\n}\n\n\n/*class ListNameChange_Transaction {\n\n    nameChangeList = [];\n    currentLists = [];\n    constructor(initName, list) {\n        this.nameChangeList.push(initName);\n        this.currentLists.push(list);\n    }\n    doTransaction = () => {\n\n    }\n\n    undoTransaction = () => {\n        \n    }\n}*/\n\nclass MoveUp_Transaction {\n    \n    currentList = null;\n    currentItem = null;\n\n    constructor(todoList, todoItem) {\n        this.currentList = todoList;\n        this.currentItem = todoItem;\n    }\n\n    doTransaction = () => {\n        let index = this.currentList.items.indexOf(this.todoItem);\n        let temp = this.currentList.items[index];\n        this.currentList.items[index] = this.currentList.items[index-1];\n        this.currentList.items[index-1] = temp;\n        // move up \n    }\n\n    undoTransaction = () => {\n        let index = this.currentList.items.indexOf(this.todoItem);\n        let temp = this.currentList.items[index];\n        this.currentList.items[index] = this.currentList.items[index+1];\n        this.currentList.items[index+1] = temp;\n        // move down \n    }\n}\n\nclass MoveDown_Transaction {\n\n    currentList = null;\n    currentItem = null;\n\n    constructor(todoList, todoItem) {\n        this.currentList = todoList;\n        this.currentItem = todoItem;\n    }\n\n    doTransaction = () => {\n        let index = this.currentList.items.indexOf(this.todoItem);\n        let temp = this.currentList.items[index];\n        this.currentList.items[index] = this.currentList.items[index+1];\n        this.currentList.items[index+1] = temp;\n        // move down \n    }\n\n    undoTransaction = () => {\n        let index = this.currentList.items.indexOf(this.todoItem);\n        let temp = this.currentList.items[index];\n        this.currentList.items[index] = this.currentList.items[index-1];\n        this.currentList.items[index-1] = temp;\n        // move up \n    }\n}\n\nclass ListItemRemoval_Transaction {\n\n    currentList = null;\n    itemRemoved = null;\n    indexOfItem = null; \n\n    constructor(todoList, todoItem, index) {\n        this.currentList = todoList;\n        this.itemRemoved = todoItem;\n        this.indexOfItem = index;\n    }\n\n    doTransaction = () => {\n        this.currentList.items.splice(this.indexOfItem, 1);\n    }\n\n    undoTransaction = () => {\n        this.currentList.items.splice(this.indexOfItem, 0, this.itemRemoved);\n    }\n}\n\nclass ListItemEdit_Transaction {\n\n}\n\nexport default jsTPS\n"]},"metadata":{},"sourceType":"module"}