{"ast":null,"code":"var _jsxFileName = \"/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport ListHeading from './ListHeading';\nimport ListItemsTable from './ListItemsTable';\nimport ListTrash from './ListTrash';\nimport PropTypes from 'prop-types';\nexport class ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changeName = e => {\n      if (e.target.value != '') {\n        this.props.todoList.name = e.target.value;\n        this.props.loadList(this.props.todoList);\n      }\n    };\n  }\n\n  getListName() {\n    if (this.props.todoList) {\n      let name = this.props.todoList.name;\n      return this.props.todoList.name;\n    } else return \"\";\n  }\n\n  getListOwner() {\n    if (this.props.todoList) {\n      let owner = this.props.todoList.owner;\n      return this.props.todoList.owner;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(ListHeading, {\n      goHome: this.props.goHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(ListTrash, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"list_details_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_details_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_name_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      onChange: this.changeName,\n      value: this.getListName(),\n      type: \"text\",\n      id: \"list_name_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_details_owner_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_owner_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Owner:\"), React.createElement(\"input\", {\n      value: this.getListOwner(),\n      type: \"text\",\n      id: \"list_owner_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(ListItemsTable, {\n      todoList: this.props.todoList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default ListScreen;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/components/list_screen/ListScreen.js"],"names":["React","Component","ListHeading","ListItemsTable","ListTrash","PropTypes","ListScreen","changeName","e","target","value","props","todoList","name","loadList","getListName","getListOwner","owner","render","goHome"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAgBtCM,UAhBsC,GAgBzBC,CAAC,IAAI;AACd,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,EAAtB,EAA0B;AACtB,aAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,GAA2BL,CAAC,CAACC,MAAF,CAASC,KAApC;AACA,aAAKC,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWC,QAA/B;AACH;AACJ,KArBqC;AAAA;;AACtCG,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKJ,KAAL,CAAWC,QAAf,EAAyB;AACrB,UAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,IAA/B;AACA,aAAO,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,IAA3B;AACH,KAHD,MAKI,OAAO,EAAP;AACP;;AACDG,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKL,KAAL,CAAWC,QAAf,EAAyB;AACrB,UAAIK,KAAK,GAAG,KAAKN,KAAL,CAAWC,QAAX,CAAoBK,KAAhC;AACA,aAAO,KAAKN,KAAL,CAAWC,QAAX,CAAoBK,KAA3B;AACH;AACJ;;AAQDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,EAAE,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,6BAAR;AAAsC,MAAA,SAAS,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AACI,MAAA,QAAQ,EAAE,KAAKZ,UADnB;AAEI,MAAA,KAAK,EAAE,KAAKQ,WAAL,EAFX;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,EAAE,EAAC,qBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EASI;AAAK,MAAA,EAAE,EAAC,8BAAR;AAAuC,MAAA,SAAS,EAAC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AACI,MAAA,KAAK,EAAE,KAAKC,YAAL,EADX;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,EAAE,EAAC,sBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,CAHJ,EAoBI,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADJ;AAwBH;;AA/CqC;AAkD1C,eAAeN,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\nimport PropTypes from 'prop-types';\n\nexport class ListScreen extends Component {\n    getListName() {\n        if (this.props.todoList) {\n            let name = this.props.todoList.name;\n            return this.props.todoList.name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            let owner = this.props.todoList.owner;\n            return this.props.todoList.owner;\n        }\n    }\n\n    changeName = e => {\n        if (e.target.value != '') {\n            this.props.todoList.name = e.target.value;\n            this.props.loadList(this.props.todoList);\n        }\n    }\n    render() {\n        return (\n            <div id=\"todo_list\">\n                <ListHeading goHome={this.props.goHome} />\n                <ListTrash />\n                <div id=\"list_details_container\">\n                    <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                        <span id=\"list_name_prompt\">Name:</span>\n                        <input \n                            onChange={this.changeName}\n                            value={this.getListName()} \n                            type=\"text\" \n                            id=\"list_name_textfield\" />\n                    </div>\n                    <div id=\"list_details_owner_container\" className=\"text_toolbar\">\n                        <span id=\"list_owner_prompt\">Owner:</span>\n                        <input \n                            value={this.getListOwner()}\n                            type=\"text\" \n                            id=\"list_owner_textfield\" />\n                    </div>\n                </div>\n                <ListItemsTable todoList={this.props.todoList} />\n            </div>\n        )\n    }\n}\n\nexport default ListScreen\n"]},"metadata":{},"sourceType":"module"}