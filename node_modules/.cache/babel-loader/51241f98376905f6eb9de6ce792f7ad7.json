{"ast":null,"code":"class ListSorting_Transaction {\n  //afterSortList = null;\n  constructor(list, sortCriteria) {\n    this.currentList = null;\n    this.items = [];\n    this.sortingCriteria = null;\n\n    this.compare = (item1, item2) => {\n      // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\n      if (this.state.sortingCriteria === \"sort_by_task_decreasing\" || this.state.sortingCriteria === \"sort_by_status_decreasing\" || this.state.sortingCriteria === \"sort_by_due_date_decreasing\") {\n        let temp = item1;\n        item1 = item2;\n        item2 = temp;\n      } // SORT BY ITEM DESCRIPTION\n\n\n      if (this.state.sortingCriteria === \"sort_by_task_increasing\" || this.state.sortingCriteria === \"sort_by_task_decreasing\") {\n        if (item1.description < item2.description) return -1;else if (item1.description > item2.description) return 1;else return 0;\n      } // SORT BY DUE DATE\n      else if (this.state.sortingCriteria === \"sort_by_due_date_increasing\" || this.state.sortingCriteria === \"sort_by_due_date_decreasing\") {\n          if (item1.due_date < item2.due_date) return -1;else if (item1.due_date > item2.due_date) return 1;else return 0;\n        } // SORT BY COMPLETED\n        else {\n            if (item1.completed < item2.completed) return -1;else if (item1.completed > item2.completed) return 1;else return 0;\n          }\n    };\n\n    this.doTransaction = () => {\n      // sort\n      this.currentList.items.sort(this.compare);\n    };\n\n    this.undoTransaction = () => {\n      this.currentList.items = [...this.items];\n    };\n\n    this.currentList = list;\n    this.items = this.currentList.items.slice();\n    this.sortingCriteria = sortCriteria;\n  }\n\n}\n\nexport default ListSorting_Transaction;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todohw2/src/jTPS/src/jtps/ListSorting_Transaction.js"],"names":["ListSorting_Transaction","constructor","list","sortCriteria","currentList","items","sortingCriteria","compare","item1","item2","state","temp","description","due_date","completed","doTransaction","sort","undoTransaction","slice"],"mappings":"AAAA,MAAMA,uBAAN,CAA8B;AAG1B;AAGAC,EAAAA,WAAW,CAACC,IAAD,EAAOC,YAAP,EAAqB;AAAA,SAJhCC,WAIgC,GAJlB,IAIkB;AAAA,SAFhCC,KAEgC,GAFxB,EAEwB;AAAA,SADhCC,eACgC,GADd,IACc;;AAAA,SAMhCC,OANgC,GAMtB,CAACC,KAAD,EAAQC,KAAR,KAAiB;AACvB;AACA,UAAI,KAAKC,KAAL,CAAWJ,eAAX,KAA6B,yBAA7B,IACG,KAAKI,KAAL,CAAWJ,eAAX,KAA6B,2BADhC,IAEG,KAAKI,KAAL,CAAWJ,eAAX,KAA6B,6BAFpC,EAEmE;AAC/D,YAAIK,IAAI,GAAGH,KAAX;AACAA,QAAAA,KAAK,GAAGC,KAAR;AACAA,QAAAA,KAAK,GAAGE,IAAR;AACH,OARsB,CASvB;;;AACA,UAAI,KAAKD,KAAL,CAAWJ,eAAX,KAA6B,yBAA7B,IACG,KAAKI,KAAL,CAAWJ,eAAX,KAA6B,yBADpC,EAC+D;AAC3D,YAAIE,KAAK,CAACI,WAAN,GAAoBH,KAAK,CAACG,WAA9B,EACI,OAAO,CAAC,CAAR,CADJ,KAEK,IAAIJ,KAAK,CAACI,WAAN,GAAoBH,KAAK,CAACG,WAA9B,EACD,OAAO,CAAP,CADC,KAGD,OAAO,CAAP;AACP,OARD,CASA;AATA,WAUK,IAAI,KAAKF,KAAL,CAAWJ,eAAX,KAA6B,6BAA7B,IACN,KAAKI,KAAL,CAAWJ,eAAX,KAA6B,6BAD3B,EAC0D;AAC3D,cAAIE,KAAK,CAACK,QAAN,GAAiBJ,KAAK,CAACI,QAA3B,EACI,OAAO,CAAC,CAAR,CADJ,KAEK,IAAIL,KAAK,CAACK,QAAN,GAAiBJ,KAAK,CAACI,QAA3B,EACD,OAAO,CAAP,CADC,KAGD,OAAO,CAAP;AACP,SARI,CASL;AATK,aAUA;AACD,gBAAIL,KAAK,CAACM,SAAN,GAAkBL,KAAK,CAACK,SAA5B,EACI,OAAO,CAAC,CAAR,CADJ,KAEK,IAAIN,KAAK,CAACM,SAAN,GAAkBL,KAAK,CAACK,SAA5B,EACD,OAAO,CAAP,CADC,KAGD,OAAO,CAAP;AACP;AACF,KA5C6B;;AAAA,SA8ChCC,aA9CgC,GA8ChB,MAAM;AAClB;AACA,WAAKX,WAAL,CAAiBC,KAAjB,CAAuBW,IAAvB,CAA4B,KAAKT,OAAjC;AACH,KAjD+B;;AAAA,SAmDhCU,eAnDgC,GAmDd,MAAM;AACpB,WAAKb,WAAL,CAAiBC,KAAjB,GAAyB,CAAC,GAAG,KAAKA,KAAT,CAAzB;AACH,KArD+B;;AAC5B,SAAKD,WAAL,GAAmBF,IAAnB;AACA,SAAKG,KAAL,GAAa,KAAKD,WAAL,CAAiBC,KAAjB,CAAuBa,KAAvB,EAAb;AACA,SAAKZ,eAAL,GAAuBH,YAAvB;AACH;;AAVyB;;AA8D9B,eAAeH,uBAAf","sourcesContent":["class ListSorting_Transaction {\n\n    currentList = null;\n    //afterSortList = null;\n    items = [];\n    sortingCriteria = null;\n    constructor(list, sortCriteria) {\n        this.currentList = list;\n        this.items = this.currentList.items.slice();\n        this.sortingCriteria = sortCriteria;\n    }\n\n    compare = (item1, item2) =>{\n        // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\n        if (this.state.sortingCriteria===\"sort_by_task_decreasing\"\n            || this.state.sortingCriteria===\"sort_by_status_decreasing\"\n            || this.state.sortingCriteria===\"sort_by_due_date_decreasing\") {\n            let temp = item1;\n            item1 = item2;\n            item2 = temp;\n        }\n        // SORT BY ITEM DESCRIPTION\n        if (this.state.sortingCriteria===\"sort_by_task_increasing\"\n            || this.state.sortingCriteria===\"sort_by_task_decreasing\") {\n            if (item1.description < item2.description)\n                return -1;\n            else if (item1.description > item2.description)\n                return 1;\n            else\n                return 0;\n        }\n        // SORT BY DUE DATE\n        else if (this.state.sortingCriteria===\"sort_by_due_date_increasing\"\n        || this.state.sortingCriteria===\"sort_by_due_date_decreasing\") {\n            if (item1.due_date < item2.due_date)\n                return -1;\n            else if (item1.due_date > item2.due_date)\n                return 1;\n            else\n                return 0;\n        }\n        // SORT BY COMPLETED\n        else {\n            if (item1.completed < item2.completed)\n                return -1;\n            else if (item1.completed > item2.completed)\n                return 1;\n            else\n                return 0;\n        }\n      }\n    \n    doTransaction = () => {\n        // sort\n        this.currentList.items.sort(this.compare);\n    }\n\n    undoTransaction = () => {\n        this.currentList.items = [...this.items];\n    }\n\n}\nexport default ListSorting_Transaction"]},"metadata":{},"sourceType":"module"}