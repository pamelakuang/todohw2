{"ast":null,"code":"var _jsxFileName = \"/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      todoItem: null,\n      currentSortingCriteria: null\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.goItemScreen = () => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n\n    this.addList = () => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      const newList = {\n        key: this.state.todoLists.length,\n        name: \"Unknown\",\n        owner: \"Unknown\",\n        items: []\n      };\n      this.setState({\n        todoLists: [...this.state.todoLists, newList]\n      });\n      this.setState({\n        currentList: newList\n      });\n      this.loadList(newList);\n    };\n\n    this.deleteList = () => {\n      const index = this.state.todoLists.indexOf(this.state.currentList);\n      this.state.todoLists.splice(index, 1);\n      this.loadList();\n      this.goHome();\n    };\n\n    this.cancelItemChanges = () => {\n      this.setState({\n        todoItem: null\n      });\n      this.loadList(this.state.currentList);\n    };\n\n    this.compare = (item1, item2) => {\n      if (this.state.currentSortingCriteria === \"SORT_BY_TASK_DECREASING\" || this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_DECREASING\" || this.state.currentSortingCriteria === \"SORT_BY_STATUS_DECREASING\") {\n        let temp = item1;\n        item1 = item2;\n        item2 = temp;\n      } // SORT BY ITEM DESCRIPTION\n\n\n      if (this.state.currentSortingCriteria === \"SORT_BY_TASK_INCREASING\" || this.state.currentSortingCriteria === \"SORT_BY_TASK_DECREASING\") {\n        if (item1.description < item2.description) return -1;else if (item1.description > item2.description) return 1;else return 0;\n      } // SORT BY DUE DATE\n      else if (this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_INCREASING\" || this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_DECREASING\") {\n          let dueDate1 = item1.due_date;\n          let dueDate2 = item2.due_date;\n          let date1 = new Date(dueDate1);\n          let date2 = new Date(dueDate2);\n          if (date1 < date2) return -1;else if (date1 > date2) return 1;else return 0;\n        } // SORT BY STATUS\n        else {\n            if (item1.completed < item2.completed) return -1;else if (item1.completed > item2.completed) return 1;else return 0;\n          }\n    };\n\n    this.sortTasks = sortingCriteria => {\n      this.setState({\n        currentSortingCriteria: sortingCriteria\n      });\n      this.state.currentList.items.sort(this.compare);\n      this.loadList(this.state.currentList);\n    };\n\n    this.processSortItemsByTask = () => {\n      if (this.state.currentSortingCriteria === \"SORT_BY_TASK_INCREASING\") {\n        this.sortTasks(\"SORT_BY_TASK_DECREASING\");\n      } else {\n        this.sortTasks(\"SORT_BY_TASK_INCREASING\");\n      }\n    };\n\n    this.processSortItemsByDueDate = () => {\n      if (this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_INCREASING\") {\n        this.sortTasks(\"SORT_BY_DUE_DATE_DECREASING\");\n      } else {\n        this.sortTasks(\"SORT_BY_DUE_DATE_INCREASING\");\n      }\n    };\n\n    this.processSortItemsByStatus = () => {\n      if (this.state.currentSortingCriteria === \"SORT_BY_STATUS_INCREASING\") {\n        this.sortTasks(\"SORT_BY_STATUS_DECREASING\");\n      } else {\n        this.sortTasks(\"SORT_BY_STATUS_INCREASING\");\n      }\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          addList: this.addList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          loadList: this.loadList,\n          deleteList: this.deleteList,\n          addList: this.addList,\n          processSortItemsByTask: this.processSortItemsByTask,\n          processSortItemsByDueDate: this.processSortItemsByDueDate,\n          processSortItemsByStatus: this.processSortItemsByStatus,\n          goItemScreen: this.goItemScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          currentList: this.state.currentList,\n          addItem: this.addItem,\n          todoItem: this.state.todoItem,\n          cancelItemChanges: this.cancelItemChanges,\n          loadList: this.loadList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","todoItem","currentSortingCriteria","goHome","setState","goItemScreen","loadList","todoListToLoad","console","log","addList","newList","key","length","name","owner","items","deleteList","index","indexOf","splice","cancelItemChanges","compare","item1","item2","temp","description","dueDate1","due_date","dueDate2","date1","Date","date2","completed","sortTasks","sortingCriteria","sort","processSortItemsByTask","processSortItemsByDueDate","processSortItemsByStatus","render","bind","addItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    todoItem: null,\n    currentSortingCriteria: null\n  }\n\n  goHome = () => {\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n  }\n\n  goItemScreen = () => {\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n  \n  addList = () => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    const newList = {\n      key: this.state.todoLists.length,\n      name: \"Unknown\",\n      owner: \"Unknown\",\n      items: []\n    }\n    this.setState( { todoLists: [...this.state.todoLists, newList]});\n    this.setState( {currentList: newList});\n    this.loadList(newList);\n  }\n\n  deleteList = () => {\n    const index = this.state.todoLists.indexOf(this.state.currentList);\n    this.state.todoLists.splice(index, 1);\n    this.loadList();\n    this.goHome();\n  }\n  cancelItemChanges = () =>{\n    this.setState({todoItem:null});\n    this.loadList(this.state.currentList);\n  }\n\n  compare = (item1, item2) => {\n    if (this.state.currentSortingCriteria === \"SORT_BY_TASK_DECREASING\"\n        || this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_DECREASING\"\n        || this.state.currentSortingCriteria === \"SORT_BY_STATUS_DECREASING\") {\n      let temp = item1;\n      item1 = item2;\n      item2 = temp;\n    }\n    // SORT BY ITEM DESCRIPTION\n    if (this.state.currentSortingCriteria === \"SORT_BY_TASK_INCREASING\" \n        || this.state.currentSortingCriteria === \"SORT_BY_TASK_DECREASING\") {\n      if (item1.description < item2.description)\n        return -1;\n      else if (item1.description > item2.description)\n        return 1;\n      else\n        return 0;\n    }\n    // SORT BY DUE DATE\n    else if (this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_INCREASING\" || this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_DECREASING\") {\n      let dueDate1 = item1.due_date;\n      let dueDate2 = item2.due_date;\n      let date1 = new Date(dueDate1);\n      let date2 = new Date(dueDate2);\n      if (date1 < date2)\n        return -1;\n      else if (date1 > date2)\n        return 1;\n      else\n        return 0;\n    }\n    // SORT BY STATUS\n    else {\n      if (item1.completed < item2.completed)\n          return -1;\n      else if (item1.completed > item2.completed)\n          return 1;\n      else\n          return 0;\n    }\n  }\n\n  sortTasks = (sortingCriteria) => {\n    this.setState({currentSortingCriteria: sortingCriteria});\n    this.state.currentList.items.sort(this.compare);\n    this.loadList(this.state.currentList);\n  }\n\n  processSortItemsByTask = () => {\n    if (this.state.currentSortingCriteria === \"SORT_BY_TASK_INCREASING\") {\n      this.sortTasks(\"SORT_BY_TASK_DECREASING\");\n    }\n    else {\n      this.sortTasks(\"SORT_BY_TASK_INCREASING\");\n    }\n  }\n  processSortItemsByDueDate = () => {\n    if (this.state.currentSortingCriteria === \"SORT_BY_DUE_DATE_INCREASING\") {\n      this.sortTasks(\"SORT_BY_DUE_DATE_DECREASING\");\n    }\n    else {\n      this.sortTasks(\"SORT_BY_DUE_DATE_INCREASING\");\n    }\n  }\n  processSortItemsByStatus = () => {\n    if (this.state.currentSortingCriteria === \"SORT_BY_STATUS_INCREASING\") {\n      this.sortTasks(\"SORT_BY_STATUS_DECREASING\");\n    }\n    else {\n      this.sortTasks(\"SORT_BY_STATUS_INCREASING\");\n    }\n  }\n\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists} \n        addList={this.addList}/>;\n      case AppScreen.LIST_SCREEN:            \n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          loadList={this.loadList} \n          deleteList={this.deleteList}\n          addList={this.addList}\n          processSortItemsByTask={this.processSortItemsByTask}\n          processSortItemsByDueDate={this.processSortItemsByDueDate}\n          processSortItemsByStatus={this.processSortItemsByStatus}\n          goItemScreen={this.goItemScreen}/>;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n        currentList={this.state.currentList}\n        addItem={this.addItem}\n        todoItem = {this.state.todoItem}\n        cancelItemChanges = {this.cancelItemChanges}\n        loadList={this.loadList}/>;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}