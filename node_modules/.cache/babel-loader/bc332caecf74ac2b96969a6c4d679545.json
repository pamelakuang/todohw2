{"ast":null,"code":"var _jsxFileName = \"/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      todoItem: null,\n      isEditingItem: false\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.goItem = () => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.cancelItemChanges = () => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        todoItem: null\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n\n    this.editItem = currentItem => {\n      this.setState({\n        isEditingItem: true\n      });\n      this.setState({\n        todoItem: currentItem\n      });\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.addItem = () => {\n      if (this.state.isEditingItem === false) {\n        const newItem = {\n          key: this.state.currentList.items.length,\n          description: document.getElementById(\"item_description_textfield\").value,\n          assigned_to: document.getElementById(\"item_assigned_to_textfield\").value,\n          due_date: document.getElementById(\"item_due_date_picker\").value,\n          completed: document.getElementById(\"item_completed_checkbox\").checked\n        };\n        if (newItem.description === \"\") newItem.description = \"Unknown\";\n        if (newItem.assigned_to === \"\") newItem.assigned_to = \"Unknown\";\n        this.state.currentList.items.push(newItem);\n        this.loadList(this.state.currentList);\n      } else {\n        if (this.state.todoItem.description !== document.getElementById(\"item_description_textfield\").value) this.state.todoItem.description = document.getElementById(\"item_description_textfield\").value;\n        if (this.state.todoItem.assigned_to !== document.getElementById(\"item_assigned_to_textfield\").value) this.state.todoItem.assigned_to = document.getElementById(\"item_assigned_to_textfield\").value;\n        if (this.state.todoItem.due_date !== document.getElementById(\"item_due_date_picker\").value) this.state.todoItem.due_date = document.getElementById(\"item_due_date_picker\").value;\n        if (this.state.todoItem.completed !== document.getElementById(\"item_completed_checkbox\").checked) this.state.todoItem.completed = document.getElementById(\"item_completed_checkbox\").checked;\n        this.setState({\n          currentScreen: AppScreen.ITEM_SCREEN\n        });\n        this.loadList(this.state.currentList);\n      }\n\n      this.setState({\n        todoItem: null\n      });\n    };\n\n    this.addList = () => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      const newList = {\n        key: this.state.todoLists.length,\n        name: \"Unknown\",\n        owner: \"Unknown\",\n        items: []\n      };\n      this.setState({\n        todoLists: [...this.state.todoLists, newList]\n      });\n      this.setState({\n        currentList: newList\n      });\n      this.loadList(newList);\n    };\n\n    this.deleteList = () => {\n      const index = this.state.todoLists.indexOf(this.state.currentList);\n      this.state.todoLists.splice(index, 1);\n      this.loadList();\n      this.goHome();\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          addList: this.addList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          loadList: this.loadList,\n          deleteList: this.deleteList,\n          addList: this.addList,\n          editItem: this.editItem,\n          goItem: this.goItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen //currentScreen={AppScreen.ITEM_SCREEN}\n        , {\n          todoItem: this.state.todoItem,\n          addItem: this.addItem,\n          cancelItemChanges: this.cancelItemChanges,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","todoItem","isEditingItem","goHome","setState","goItem","cancelItemChanges","loadList","todoListToLoad","console","log","editItem","currentItem","addItem","newItem","key","items","length","description","document","getElementById","value","assigned_to","due_date","completed","checked","push","addList","newList","name","owner","deleteList","index","indexOf","splice","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    todoItem: null,\n    isEditingItem: false,\n  }\n\n  goHome = () => {\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n  }\n\n  goItem = () => {\n    this.setState( {currentScreen: AppScreen.ITEM_SCREEN});\n  }\n\n  cancelItemChanges = () => {\n    this.setState( {currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({todoItem: null});\n  }\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n  \n  editItem = (currentItem) => {\n    this.setState({isEditingItem: true});\n    this.setState({todoItem:currentItem});\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n  }\n  addItem = () => {\n    if (this.state.isEditingItem === false) {\n      const newItem = {\n        key: this.state.currentList.items.length,\n        description: document.getElementById(\"item_description_textfield\").value,\n        assigned_to: document.getElementById(\"item_assigned_to_textfield\").value,\n        due_date: document.getElementById(\"item_due_date_picker\").value,\n        completed: document.getElementById(\"item_completed_checkbox\").checked,\n      }\n      if (newItem.description === \"\")\n        newItem.description = \"Unknown\";\n      if (newItem.assigned_to === \"\")\n        newItem.assigned_to = \"Unknown\";\n      this.state.currentList.items.push(newItem);\n      this.loadList(this.state.currentList);\n    }\n    else {\n      if (this.state.todoItem.description !== document.getElementById(\"item_description_textfield\").value)\n        this.state.todoItem.description = document.getElementById(\"item_description_textfield\").value;\n      if (this.state.todoItem.assigned_to !== document.getElementById(\"item_assigned_to_textfield\").value)\n        this.state.todoItem.assigned_to = document.getElementById(\"item_assigned_to_textfield\").value;\n      if (this.state.todoItem.due_date !== document.getElementById(\"item_due_date_picker\").value)\n        this.state.todoItem.due_date = document.getElementById(\"item_due_date_picker\").value;\n      if (this.state.todoItem.completed !== document.getElementById(\"item_completed_checkbox\").checked)\n        this.state.todoItem.completed = document.getElementById(\"item_completed_checkbox\").checked;\n      this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n      this.loadList(this.state.currentList);\n    }\n    this.setState({todoItem: null});\n  }\n  addList = () => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    const newList = {\n      key: this.state.todoLists.length,\n      name: \"Unknown\",\n      owner: \"Unknown\",\n      items: []\n    }\n    this.setState( { todoLists: [...this.state.todoLists, newList]});\n    this.setState( {currentList: newList});\n    this.loadList(newList);\n  }\n\n  deleteList = () => {\n    const index = this.state.todoLists.indexOf(this.state.currentList);\n    this.state.todoLists.splice(index, 1);\n    this.loadList();\n    this.goHome();\n  }\n\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists} \n        addList={this.addList}/>;\n      case AppScreen.LIST_SCREEN:            \n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          loadList={this.loadList} \n          deleteList={this.deleteList}\n          addList={this.addList}\n          editItem={this.editItem}\n          goItem={this.goItem}/>;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n        //currentScreen={AppScreen.ITEM_SCREEN}\n        todoItem={this.state.todoItem}\n        addItem={this.addItem}\n        cancelItemChanges={this.cancelItemChanges}\n        />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}