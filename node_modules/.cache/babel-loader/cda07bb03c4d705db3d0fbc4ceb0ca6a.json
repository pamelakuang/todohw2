{"ast":null,"code":"class ListSorting_Transaction {\n  //afterSortList = null;\n  constructor(list, sortCriteria) {\n    this.currentList = null;\n    this.items = [];\n    this.sortingCriteria = null;\n\n    this.compare = (item1, item2) => {\n      // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\n      if (this.sortingCriteria === \"sort_by_task_decreasing\" || this.sortingCriteria === \"sort_by_status_decreasing\" || this.sortingCriteria === \"sort_by_due_date_decreasing\") {\n        let temp = item1;\n        item1 = item2;\n        item2 = temp;\n      } // SORT BY ITEM DESCRIPTION\n\n\n      if (this.sortingCriteria === \"sort_by_task_increasing\" || this.sortingCriteria === \"sort_by_task_decreasing\") {\n        if (item1.description < item2.description) return -1;else if (item1.description > item2.description) return 1;else return 0;\n      } // SORT BY DUE DATE\n      else if (this.sortingCriteria === \"sort_by_due_date_increasing\" || this.sortingCriteria === \"sort_by_due_date_decreasing\") {\n          if (item1.due_date < item2.due_date) return -1;else if (item1.due_date > item2.due_date) return 1;else return 0;\n        } // SORT BY COMPLETED\n        else {\n            if (item1.completed < item2.completed) return -1;else if (item1.completed > item2.completed) return 1;else return 0;\n          }\n    };\n\n    this.doTransaction = () => {\n      // sort\n      console.log(this.items);\n      this.currentList.items.sort(this.compare);\n      console.log(this.items);\n    };\n\n    this.undoTransaction = () => {\n      this.currentList.items = this.items;\n      console.log(this.currentList.items);\n    };\n\n    this.currentList = list;\n    this.items = this.currentList.items;\n    this.sortingCriteria = sortCriteria;\n  }\n\n}\n\nexport default ListSorting_Transaction;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todohw2/src/jTPS/src/jtps/ListSorting_Transaction.js"],"names":["ListSorting_Transaction","constructor","list","sortCriteria","currentList","items","sortingCriteria","compare","item1","item2","temp","description","due_date","completed","doTransaction","console","log","sort","undoTransaction"],"mappings":"AAAA,MAAMA,uBAAN,CAA8B;AAG1B;AAGAC,EAAAA,WAAW,CAACC,IAAD,EAAOC,YAAP,EAAqB;AAAA,SAJhCC,WAIgC,GAJlB,IAIkB;AAAA,SAFhCC,KAEgC,GAFxB,EAEwB;AAAA,SADhCC,eACgC,GADd,IACc;;AAAA,SAMhCC,OANgC,GAMtB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxB;AACA,UAAI,KAAKH,eAAL,KAAuB,yBAAvB,IACG,KAAKA,eAAL,KAAuB,2BAD1B,IAEG,KAAKA,eAAL,KAAuB,6BAF9B,EAE6D;AACzD,YAAII,IAAI,GAAGF,KAAX;AACAA,QAAAA,KAAK,GAAGC,KAAR;AACAA,QAAAA,KAAK,GAAGC,IAAR;AACH,OARuB,CASxB;;;AACA,UAAI,KAAKJ,eAAL,KAAuB,yBAAvB,IACG,KAAKA,eAAL,KAAuB,yBAD9B,EACyD;AACrD,YAAIE,KAAK,CAACG,WAAN,GAAoBF,KAAK,CAACE,WAA9B,EACI,OAAO,CAAC,CAAR,CADJ,KAEK,IAAIH,KAAK,CAACG,WAAN,GAAoBF,KAAK,CAACE,WAA9B,EACD,OAAO,CAAP,CADC,KAGD,OAAO,CAAP;AACP,OARD,CASA;AATA,WAUK,IAAI,KAAKL,eAAL,KAAuB,6BAAvB,IACI,KAAKA,eAAL,KAAuB,6BAD/B,EAC8D;AACjE,cAAIE,KAAK,CAACI,QAAN,GAAiBH,KAAK,CAACG,QAA3B,EACE,OAAO,CAAC,CAAR,CADF,KAEK,IAAIJ,KAAK,CAACI,QAAN,GAAiBH,KAAK,CAACG,QAA3B,EACH,OAAO,CAAP,CADG,KAGH,OAAO,CAAP;AACH,SARI,CASL;AATK,aAUA;AACH,gBAAIJ,KAAK,CAACK,SAAN,GAAkBJ,KAAK,CAACI,SAA5B,EACE,OAAO,CAAC,CAAR,CADF,KAEK,IAAIL,KAAK,CAACK,SAAN,GAAkBJ,KAAK,CAACI,SAA5B,EACH,OAAO,CAAP,CADG,KAGH,OAAO,CAAP;AACH;AACJ,KA5C+B;;AAAA,SA6ChCC,aA7CgC,GA6ChB,MAAM;AAClB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,WAAKD,WAAL,CAAiBC,KAAjB,CAAuBY,IAAvB,CAA4B,KAAKV,OAAjC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACH,KAlD+B;;AAAA,SAoDhCa,eApDgC,GAoDd,MAAM;AACpB,WAAKd,WAAL,CAAiBC,KAAjB,GAAyB,KAAKA,KAA9B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,WAAL,CAAiBC,KAA7B;AACH,KAvD+B;;AAC5B,SAAKD,WAAL,GAAmBF,IAAnB;AACA,SAAKG,KAAL,GAAa,KAAKD,WAAL,CAAiBC,KAA9B;AACA,SAAKC,eAAL,GAAuBH,YAAvB;AACH;;AAVyB;;AAgE9B,eAAeH,uBAAf","sourcesContent":["class ListSorting_Transaction {\n\n    currentList = null;\n    //afterSortList = null;\n    items = [];\n    sortingCriteria = null;\n    constructor(list, sortCriteria) {\n        this.currentList = list;\n        this.items = this.currentList.items;\n        this.sortingCriteria = sortCriteria;\n    }\n\n    compare = (item1, item2) => {\n        // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\n        if (this.sortingCriteria===\"sort_by_task_decreasing\"\n            || this.sortingCriteria===\"sort_by_status_decreasing\"\n            || this.sortingCriteria===\"sort_by_due_date_decreasing\") {\n            let temp = item1;\n            item1 = item2;\n            item2 = temp;\n        }\n        // SORT BY ITEM DESCRIPTION\n        if (this.sortingCriteria===\"sort_by_task_increasing\"\n            || this.sortingCriteria===\"sort_by_task_decreasing\") {\n            if (item1.description < item2.description)\n                return -1;\n            else if (item1.description > item2.description)\n                return 1;\n            else\n                return 0;\n        }\n        // SORT BY DUE DATE\n        else if (this.sortingCriteria===\"sort_by_due_date_increasing\"\n                  || this.sortingCriteria===\"sort_by_due_date_decreasing\") {\n          if (item1.due_date < item2.due_date)\n            return -1;\n          else if (item1.due_date > item2.due_date)\n            return 1;\n          else\n            return 0;\n        }\n        // SORT BY COMPLETED\n        else {\n          if (item1.completed < item2.completed)\n            return -1;\n          else if (item1.completed > item2.completed)\n            return 1;\n          else\n            return 0;\n        }\n    }\n    doTransaction = () => {\n        // sort\n        console.log(this.items);\n        this.currentList.items.sort(this.compare);\n        console.log(this.items);\n    }\n\n    undoTransaction = () => {\n        this.currentList.items = this.items;\n        console.log(this.currentList.items);\n    }\n\n}\nexport default ListSorting_Transaction"]},"metadata":{},"sourceType":"module"}