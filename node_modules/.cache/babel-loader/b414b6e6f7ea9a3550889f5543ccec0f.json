{"ast":null,"code":"class ListItemEdit_Transaction {\n  constructor(todoList, currentitem, editOrnewitem, editingItem) {\n    this.currentList = null;\n    this.edit_new_item = null;\n    this.currentItem = null;\n    this.previousItem = null;\n    this.isEditingItem = null;\n\n    this.doTransaction = () => {\n      if (this.isEditingItem === false) {\n        this.edit_new_item.key = this.currentList.items.length;\n        this.currentList.items.push(this.edit_new_item);\n      } else {\n        this.previousItem.description = this.currentItem.description;\n        this.previousItem.assigned_to = this.currentItem.assigned_to;\n        this.previousItem.due_date = this.currentItem.due_date;\n        this.previousItem.completed = this.currentItem.completed;\n        this.currentItem.description = this.edit_new_item.description;\n        this.currentItem.assigned_to = this.edit_new_item.assigned_to;\n        this.currentItem.due_date = this.edit_new_item.due_date;\n        this.currentItem.completed = this.edit_new_item.completed;\n      }\n    };\n\n    this.undoTransaction = () => {\n      if (this.isEditingItem === false) {\n        let index = this.currentList.items.indexOf(this.edit_new_item);\n        this.currentList.items.splice(index, 1);\n      } else {\n        this.currentItem.description = this.previousItem.description;\n        this.currentItem.assigned_to = this.previousItem.assigned_to;\n        this.currentItem.due_date = this.previousItem.due_date;\n        this.currentItem.completed = this.previousItem.completed;\n        this.currentItem = this.previousItem;\n      }\n    };\n\n    this.currentList = todoList;\n    this.currentItem = currentitem;\n    this.edit_new_item = editOrnewitem;\n    this.isEditingItem = editingItem;\n  }\n\n}\n\nexport default ListItemEdit_Transaction;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/jTPS/src/jtps/ListItemEdit_Transaction.js"],"names":["ListItemEdit_Transaction","constructor","todoList","currentitem","editOrnewitem","editingItem","currentList","edit_new_item","currentItem","previousItem","isEditingItem","doTransaction","key","items","length","push","description","assigned_to","due_date","completed","undoTransaction","index","indexOf","splice"],"mappings":"AAAA,MAAMA,wBAAN,CAA+B;AAQ3BC,EAAAA,WAAW,CAACC,QAAD,EAAWC,WAAX,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoD;AAAA,SAN/DC,WAM+D,GANjD,IAMiD;AAAA,SAL/DC,aAK+D,GAL/C,IAK+C;AAAA,SAJ/DC,WAI+D,GAJjD,IAIiD;AAAA,SAH/DC,YAG+D,GAHhD,IAGgD;AAAA,SAF/DC,aAE+D,GAF/C,IAE+C;;AAAA,SAO/DC,aAP+D,GAO/C,MAAM;AAClB,UAAI,KAAKD,aAAL,KAAuB,KAA3B,EAAkC;AAC9B,aAAKH,aAAL,CAAmBK,GAAnB,GAAyB,KAAKN,WAAL,CAAiBO,KAAjB,CAAuBC,MAAhD;AACA,aAAKR,WAAL,CAAiBO,KAAjB,CAAuBE,IAAvB,CAA4B,KAAKR,aAAjC;AACH,OAHD,MAIK;AACD,aAAKE,YAAL,CAAkBO,WAAlB,GAAgC,KAAKR,WAAL,CAAiBQ,WAAjD;AACA,aAAKP,YAAL,CAAkBQ,WAAlB,GAAgC,KAAKT,WAAL,CAAiBS,WAAjD;AACA,aAAKR,YAAL,CAAkBS,QAAlB,GAA6B,KAAKV,WAAL,CAAiBU,QAA9C;AACA,aAAKT,YAAL,CAAkBU,SAAlB,GAA8B,KAAKX,WAAL,CAAiBW,SAA/C;AAEA,aAAKX,WAAL,CAAiBQ,WAAjB,GAA+B,KAAKT,aAAL,CAAmBS,WAAlD;AACA,aAAKR,WAAL,CAAiBS,WAAjB,GAA+B,KAAKV,aAAL,CAAmBU,WAAlD;AACA,aAAKT,WAAL,CAAiBU,QAAjB,GAA4B,KAAKX,aAAL,CAAmBW,QAA/C;AACA,aAAKV,WAAL,CAAiBW,SAAjB,GAA6B,KAAKZ,aAAL,CAAmBY,SAAhD;AAEH;AACJ,KAxB8D;;AAAA,SA0B/DC,eA1B+D,GA0B7C,MAAM;AACpB,UAAI,KAAKV,aAAL,KAAuB,KAA3B,EAAkC;AAC9B,YAAIW,KAAK,GAAG,KAAKf,WAAL,CAAiBO,KAAjB,CAAuBS,OAAvB,CAA+B,KAAKf,aAApC,CAAZ;AACA,aAAKD,WAAL,CAAiBO,KAAjB,CAAuBU,MAAvB,CAA8BF,KAA9B,EAAqC,CAArC;AACH,OAHD,MAIK;AACD,aAAKb,WAAL,CAAiBQ,WAAjB,GAA+B,KAAKP,YAAL,CAAkBO,WAAjD;AACA,aAAKR,WAAL,CAAiBS,WAAjB,GAA+B,KAAKR,YAAL,CAAkBQ,WAAjD;AACA,aAAKT,WAAL,CAAiBU,QAAjB,GAA4B,KAAKT,YAAL,CAAkBS,QAA9C;AACA,aAAKV,WAAL,CAAiBW,SAAjB,GAA6B,KAAKV,YAAL,CAAkBU,SAA/C;AACA,aAAKX,WAAL,GAAmB,KAAKC,YAAxB;AACH;AACJ,KAtC8D;;AAC3D,SAAKH,WAAL,GAAmBJ,QAAnB;AACA,SAAKM,WAAL,GAAmBL,WAAnB;AACA,SAAKI,aAAL,GAAqBH,aAArB;AACA,SAAKM,aAAL,GAAqBL,WAArB;AACH;;AAb0B;;AAiD/B,eAAeL,wBAAf","sourcesContent":["class ListItemEdit_Transaction {\n\n    currentList = null;\n    edit_new_item = null;\n    currentItem = null;\n    previousItem = null;\n    isEditingItem = null;\n\n    constructor(todoList, currentitem, editOrnewitem, editingItem) {\n        this.currentList = todoList;\n        this.currentItem = currentitem;\n        this.edit_new_item = editOrnewitem;\n        this.isEditingItem = editingItem;\n    }\n\n    doTransaction = () => {\n        if (this.isEditingItem === false) {\n            this.edit_new_item.key = this.currentList.items.length;\n            this.currentList.items.push(this.edit_new_item);\n        }\n        else {\n            this.previousItem.description = this.currentItem.description;\n            this.previousItem.assigned_to = this.currentItem.assigned_to;\n            this.previousItem.due_date = this.currentItem.due_date;\n            this.previousItem.completed = this.currentItem.completed;\n            \n            this.currentItem.description = this.edit_new_item.description;\n            this.currentItem.assigned_to = this.edit_new_item.assigned_to;\n            this.currentItem.due_date = this.edit_new_item.due_date;\n            this.currentItem.completed = this.edit_new_item.completed;\n\n        }\n    }\n\n    undoTransaction = () => {\n        if (this.isEditingItem === false) {\n            let index = this.currentList.items.indexOf(this.edit_new_item);\n            this.currentList.items.splice(index, 1);\n        }\n        else {\n            this.currentItem.description = this.previousItem.description;\n            this.currentItem.assigned_to = this.previousItem.assigned_to;\n            this.currentItem.due_date = this.previousItem.due_date;\n            this.currentItem.completed = this.previousItem.completed;\n            this.currentItem = this.previousItem;\n        }\n    }\n}\n\nexport default ListItemEdit_Transaction"]},"metadata":{},"sourceType":"module"}