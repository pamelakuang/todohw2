{"ast":null,"code":"var _jsxFileName = \"/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      todoItem: null,\n      currentSortingCriteria: null\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.goItemScreen = () => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n\n    this.addList = () => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      const newList = {\n        key: this.state.todoLists.length,\n        name: \"Unknown\",\n        owner: \"Unknown\",\n        items: []\n      };\n      this.setState({\n        todoLists: [...this.state.todoLists, newList]\n      });\n      this.setState({\n        currentList: newList\n      });\n      this.loadList(newList);\n    };\n\n    this.deleteList = () => {\n      const index = this.state.todoLists.indexOf(this.state.currentList);\n      this.state.todoLists.splice(index, 1);\n      this.loadList();\n      this.goHome();\n    };\n\n    this.compare = (item1, item2) => {\n      if (thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_DECREASING) || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING) || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_STATUS_DECREASING)) {\n        let temp = item1;\n        item1 = item2;\n        item2 = temp;\n      } // SORT BY ITEM DESCRIPTION\n\n\n      if (thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_INCREASING) || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_DECREASING)) {\n        if (item1.getDescription() < item2.getDescription()) return -1;else if (item1.getDescription() > item2.getDescription()) return 1;else return 0;\n      } // SORT BY DUE DATE\n      else if (thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_INCREASING) || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING)) {\n          let dueDate1 = item1.getDueDate();\n          let dueDate2 = item2.getDueDate();\n          let date1 = new Date(dueDate1);\n          let date2 = new Date(dueDate2);\n          if (date1 < date2) return -1;else if (date1 > date2) return 1;else return 0;\n        } // SORT BY COMPLETED\n        else {\n            if (item1.isCompleted() < item2.isCompleted()) return -1;else if (item1.isCompleted() > item2.isCompleted()) return 1;else return 0;\n          }\n    };\n\n    this.sortTasks = currentSortingCriteria => {\n      this.state.currentSortingCriteria = currentSortingCriteria;\n      this.state.currentList.items.sort(this.compare);\n      this.loadList(this.state.currentList);\n    };\n\n    this.processSortItemsByTask = () => {\n      if (this.state.currentSortingCriteria === \"INCREASING\") {\n        this.sortTasks(\"DECREASING\");\n      } else {\n        this.sortTasks(\"INCREASING\");\n      }\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          addList: this.addList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          loadList: this.loadList,\n          deleteList: this.deleteList,\n          addList: this.addList,\n          processSortItemsByTask: this.processSortItemsByTask,\n          goItemScreen: this.goItemScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          currentScreen: this.state.currentScreen,\n          currentList: this.state.currentList,\n          todoItem: this.state.todoItem,\n          loadList: this.loadList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","todoItem","currentSortingCriteria","goHome","setState","goItemScreen","loadList","todoListToLoad","console","log","addList","newList","key","length","name","owner","items","deleteList","index","indexOf","splice","compare","item1","item2","thisModel","isCurrentItemSortCriteria","ItemSortCriteria","SORT_BY_TASK_DECREASING","SORT_BY_DUE_DATE_DECREASING","SORT_BY_STATUS_DECREASING","temp","SORT_BY_TASK_INCREASING","getDescription","SORT_BY_DUE_DATE_INCREASING","dueDate1","getDueDate","dueDate2","date1","Date","date2","isCompleted","sortTasks","sort","processSortItemsByTask","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    todoItem: null,\n    currentSortingCriteria: null\n  }\n\n  goHome = () => {\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n  }\n\n  goItemScreen = () => {\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n  \n  addList = () => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    const newList = {\n      key: this.state.todoLists.length,\n      name: \"Unknown\",\n      owner: \"Unknown\",\n      items: []\n    }\n    this.setState( { todoLists: [...this.state.todoLists, newList]});\n    this.setState( {currentList: newList});\n    this.loadList(newList);\n  }\n\n  deleteList = () => {\n    const index = this.state.todoLists.indexOf(this.state.currentList);\n    this.state.todoLists.splice(index, 1);\n    this.loadList();\n    this.goHome();\n  }\n\n  compare = (item1, item2) => {\n    if (thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_DECREASING)\n            || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING)\n            || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_STATUS_DECREASING)) {\n            let temp = item1;\n            item1 = item2;\n            item2 = temp;\n        }\n        // SORT BY ITEM DESCRIPTION\n        if (thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_INCREASING)\n            || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_DECREASING)) {\n            if (item1.getDescription() < item2.getDescription())\n                return -1;\n            else if (item1.getDescription() > item2.getDescription())\n                return 1;\n            else\n                return 0;\n        }\n        // SORT BY DUE DATE\n        else if (thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_INCREASING)\n            || thisModel.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING)) {\n            let dueDate1 = item1.getDueDate();\n            let dueDate2 = item2.getDueDate();\n            let date1 = new Date(dueDate1);\n            let date2 = new Date(dueDate2);\n            if (date1 < date2)\n                return -1;\n            else if (date1 > date2)\n                return 1;\n            else\n                return 0;\n        }\n        // SORT BY COMPLETED\n        else {\n            if (item1.isCompleted() < item2.isCompleted())\n                return -1;\n            else if (item1.isCompleted() > item2.isCompleted())\n                return 1;\n            else\n                return 0;\n        }\n  }\n\n  sortTasks = (currentSortingCriteria) => {\n    this.state.currentSortingCriteria = currentSortingCriteria;\n    this.state.currentList.items.sort(this.compare);\n    this.loadList(this.state.currentList);\n  }\n\n  processSortItemsByTask = () => {\n    if (this.state.currentSortingCriteria === \"INCREASING\") {\n      this.sortTasks(\"DECREASING\");\n    }\n    else {\n      this.sortTasks(\"INCREASING\");\n    }\n  }\n\n  render() {\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists} \n        addList={this.addList}/>;\n      case AppScreen.LIST_SCREEN:            \n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          loadList={this.loadList} \n          deleteList={this.deleteList}\n          addList={this.addList}\n          processSortItemsByTask={this.processSortItemsByTask}\n          goItemScreen={this.goItemScreen}/>;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n        currentScreen={this.state.currentScreen}\n        currentList={this.state.currentList}\n        todoItem = {this.state.todoItem}\n        loadList={this.loadList}/>;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}