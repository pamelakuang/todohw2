{"ast":null,"code":"var _jsxFileName = \"/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport ListHeading from './ListHeading';\nimport ListItemsTable from './ListItemsTable';\nimport ListTrash from './ListTrash';\nimport AddItem from './AddItem';\nimport Modal from './Modal';\nimport PropTypes from 'prop-types';\nexport class ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.tps = new jsTPS();\n\n    this.changeName = e => {\n      this.props.addNameChangeTransaction(this.props.todoList, e.target.value); //this.props.todoList.name = e.target.value;\n\n      this.props.loadList(this.props.todoList);\n    };\n\n    this.changeOwner = e => {\n      this.props.addOwnerChangeTransaction(this.props.todoList, e.target.value); //this.props.todoList.owner = e.target.value;\n\n      this.props.loadList(this.props.todoList);\n    };\n\n    this.addMoveUpTransaction = (list, item) => {\n      this.tps.addTransaction(new MoveUpTransaction(list, item));\n    };\n\n    this.addMoveDownTransaction = (list, item) => {\n      this.tps.addTransaction(new MoveDownTransaction(list, item));\n    };\n\n    this.addNameChangeTransaction = (list, newName) => {\n      this.tps.addTransaction(new ListNameChangeTransaction(list, newName));\n    };\n\n    this.addOwnerChangeTransaction = (list, newOwner) => {\n      this.tps.addTransaction(new ListOwnerChangeTransaction(list, newOwner));\n    };\n\n    this.addListItemRemovalTransaction = (list, item, index) => {\n      this.tps.addTransaction(new ListItemRemovalTransaction(list, item, index));\n    };\n\n    this.addItemEditTransaction = (list, currentItem, editOrNewItem, isEditingItem) => {\n      this.tps.addTransaction(new ListItemEditTransaction(list, currentItem, editOrNewItem, isEditingItem));\n    };\n\n    this.handleKeyPress = e => {\n      let button = String.fromCharCode(e.which).toLowerCase();\n\n      if (e.ctrlKey && button === 'z') {\n        this.tps.undoTransaction();\n        this.props.loadList(this.props.todoList); //this.setState({currentScreen: AppScreen.LIST_SCREEN});\n      } else if (e.ctrlKey && button === 'y') {\n        this.tps.doTransaction();\n        this.props.loadList(this.props.todoList); //this.setState({currentScreen: AppScreen.LIST_SCREEN});\n      }\n    };\n  }\n\n  getListName() {\n    if (this.props.todoList) {\n      let name = this.props.todoList.name;\n      return this.props.todoList.name;\n    } else return \"\";\n  }\n\n  getListOwner() {\n    if (this.props.todoList) {\n      let owner = this.props.todoList.owner;\n      return this.props.todoList.owner;\n    }\n  }\n\n  render() {\n    document.addEventListener('keydown', this.handleKeyPress);\n    return React.createElement(\"div\", {\n      id: \"todo_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(ListHeading, {\n      goHome: this.props.goHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ListTrash, {\n      showDialog: this.props.showDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"list_details_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_details_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_name_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      onChange: this.changeName,\n      value: this.getListName(),\n      type: \"text\",\n      id: \"list_name_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_details_owner_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_owner_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Owner:\"), React.createElement(\"input\", {\n      onChange: this.changeOwner,\n      value: this.getListOwner(),\n      type: \"text\",\n      id: \"list_owner_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(ListItemsTable, {\n      todoList: this.props.todoList,\n      loadList: this.props.loadList,\n      editItem: this.props.editItem,\n      processSortItemsByTask: this.props.processSortItemsByTask,\n      processSortItemsByStatus: this.props.processSortItemsByStatus,\n      processSortItemsByDueDate: this.props.processSortItemsByDueDate,\n      addMoveUpTransaction: this.props.addMoveUpTransaction,\n      addMoveDownTransaction: this.props.addMoveDownTransaction,\n      addListItemRemovalTransaction: this.props.addListItemRemovalTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(AddItem, {\n      goItem: this.props.goItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      deleteList: this.props.deleteList,\n      hideDialog: this.props.hideDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default ListScreen;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/components/list_screen/ListScreen.js"],"names":["React","Component","ListHeading","ListItemsTable","ListTrash","AddItem","Modal","PropTypes","ListScreen","tps","jsTPS","changeName","e","props","addNameChangeTransaction","todoList","target","value","loadList","changeOwner","addOwnerChangeTransaction","addMoveUpTransaction","list","item","addTransaction","MoveUpTransaction","addMoveDownTransaction","MoveDownTransaction","newName","ListNameChangeTransaction","newOwner","ListOwnerChangeTransaction","addListItemRemovalTransaction","index","ListItemRemovalTransaction","addItemEditTransaction","currentItem","editOrNewItem","isEditingItem","ListItemEditTransaction","handleKeyPress","button","String","fromCharCode","which","toLowerCase","ctrlKey","undoTransaction","doTransaction","getListName","name","getListOwner","owner","render","document","addEventListener","goHome","showDialog","editItem","processSortItemsByTask","processSortItemsByStatus","processSortItemsByDueDate","goItem","deleteList","hideDialog"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\nimport AddItem from './AddItem'\nimport Modal from './Modal'\nimport PropTypes from 'prop-types';\n\nexport class ListScreen extends Component {\n    tps = new jsTPS();\n    getListName() {\n        if (this.props.todoList) {\n            let name = this.props.todoList.name;\n            return this.props.todoList.name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            let owner = this.props.todoList.owner;\n            return this.props.todoList.owner;\n        }\n    }\n\n    changeName = e => {\n        this.props.addNameChangeTransaction(this.props.todoList, e.target.value);\n        //this.props.todoList.name = e.target.value;\n        this.props.loadList(this.props.todoList);\n    }\n\n    changeOwner = e => {\n        this.props.addOwnerChangeTransaction(this.props.todoList, e.target.value);\n        //this.props.todoList.owner = e.target.value;\n        this.props.loadList(this.props.todoList);\n    }\n\n    addMoveUpTransaction = (list, item) => {\n        this.tps.addTransaction(new MoveUpTransaction(list, item));\n      }\n    \n      addMoveDownTransaction = (list, item) => {\n        this.tps.addTransaction(new MoveDownTransaction(list, item));\n      }\n    \n      addNameChangeTransaction = (list, newName) => {\n        this.tps.addTransaction(new ListNameChangeTransaction(list, newName));\n      }\n    \n      addOwnerChangeTransaction = (list, newOwner) => {\n        this.tps.addTransaction(new ListOwnerChangeTransaction(list, newOwner));\n      }\n    \n      addListItemRemovalTransaction = (list, item, index) => {\n        this.tps.addTransaction(new ListItemRemovalTransaction(list, item, index));\n      }\n      \n      addItemEditTransaction = (list, currentItem, editOrNewItem, isEditingItem) => {\n        this.tps.addTransaction(new ListItemEditTransaction(list, currentItem, editOrNewItem, isEditingItem));\n      }\n    \n    handleKeyPress = (e) => {\n        let button = String.fromCharCode(e.which).toLowerCase();\n        if (e.ctrlKey && button === 'z') {\n          this.tps.undoTransaction();\n          this.props.loadList(this.props.todoList);\n          //this.setState({currentScreen: AppScreen.LIST_SCREEN});\n        }\n        else if (e.ctrlKey && button === 'y') {\n          this.tps.doTransaction();\n          this.props.loadList(this.props.todoList);\n          //this.setState({currentScreen: AppScreen.LIST_SCREEN});\n        }\n    }\n    render() {\n        document.addEventListener('keydown', this.handleKeyPress);\n        return (\n            <div id=\"todo_list\">\n                <ListHeading goHome={this.props.goHome} />\n                <ListTrash \n                    showDialog={this.props.showDialog}/>\n                <div id=\"list_details_container\">\n                    <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                        <span id=\"list_name_prompt\">Name:</span>\n                        <input \n                            onChange={this.changeName}\n                            value={this.getListName()} \n                            type=\"text\" \n                            id=\"list_name_textfield\" />\n                    </div>\n                    <div id=\"list_details_owner_container\" className=\"text_toolbar\">\n                        <span id=\"list_owner_prompt\">Owner:</span>\n                        <input \n                            onChange={this.changeOwner}\n                            value={this.getListOwner()}\n                            type=\"text\" \n                            id=\"list_owner_textfield\" />\n                    </div>\n                </div>\n                <ListItemsTable todoList={this.props.todoList} loadList = {this.props.loadList} editItem={this.props.editItem}\n                processSortItemsByTask={this.props.processSortItemsByTask}\n                processSortItemsByStatus={this.props.processSortItemsByStatus}\n                processSortItemsByDueDate={this.props.processSortItemsByDueDate}\n                addMoveUpTransaction={this.props.addMoveUpTransaction}\n                addMoveDownTransaction={this.props.addMoveDownTransaction}\n                addListItemRemovalTransaction={this.props.addListItemRemovalTransaction}/>\n                <AddItem goItem={this.props.goItem}/>\n                <Modal deleteList={this.props.deleteList} hideDialog={this.props.hideDialog}/>\n            </div>\n        )\n    }\n}\n\nexport default ListScreen\n"]},"metadata":{},"sourceType":"module"}