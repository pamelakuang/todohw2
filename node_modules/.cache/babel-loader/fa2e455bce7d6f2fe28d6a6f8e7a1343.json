{"ast":null,"code":"var _jsxFileName = \"/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nimport jsTPS from './jTPS/src/jtps/jsTPS';\nimport MoveUpTransaction from './jTPS/src/jtps/MoveUp_Transaction';\nimport MoveDownTransaction from './jTPS/src/jtps/MoveDown_Transaction';\nimport ListNameChangeTransaction from './jTPS/src/jtps/ListNameChange_Transaction';\nimport ListOwnerChangeTransaction from './jTPS/src/jtps/ListOwnerChange_Transaction';\nimport ListItemRemovalTransaction from './jTPS/src/jtps/ListItemRemoval_Transaction';\nimport ListItemEditTransaction from './jTPS/src/jtps/ListItemEdit_Transaction';\nimport ListItemEdit_Transaction from './jTPS/src/jtps/ListItemEdit_Transaction';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.tps = new jsTPS();\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      todoItem: null,\n      isEditingItem: false,\n      sortingCriteria: null\n    };\n\n    this.addMoveUpTransaction = (list, item) => {\n      this.tps.addTransaction(new MoveUpTransaction(list, item));\n    };\n\n    this.addMoveDownTransaction = (list, item) => {\n      this.tps.addTransaction(new MoveDownTransaction(list, item));\n    };\n\n    this.addNameChangeTransaction = (list, newName) => {\n      this.tps.addTransaction(new ListNameChangeTransaction(list, newName));\n    };\n\n    this.addOwnerChangeTransaction = (list, newOwner) => {\n      this.tps.addTransaction(new ListOwnerChangeTransaction(list, newOwner));\n    };\n\n    this.addListItemRemovalTransaction = (list, item, index) => {\n      this.tps.addTransaction(new ListItemRemovalTransaction(list, item, index));\n    };\n\n    this.addItemEditTransaction = (list, currentItem, editOrNewItem, isEditingItem) => {\n      this.tps.addTransaction(new ListItemEdit_Transaction(list, currentItem, editOrNewItem, isEditingItem));\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.goItem = () => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.cancelItemChanges = () => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        todoItem: null\n      });\n      this.setState({\n        isEditingItem: false\n      });\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n\n    this.editItem = currentItem => {\n      this.setState({\n        isEditingItem: true\n      });\n      this.setState({\n        todoItem: currentItem\n      });\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.addItem = () => {\n      if (this.state.isEditingItem === false) {\n        const newItem = {\n          key: this.state.currentList.items.length,\n          description: document.getElementById(\"item_description_textfield\").value,\n          assigned_to: document.getElementById(\"item_assigned_to_textfield\").value,\n          due_date: document.getElementById(\"item_due_date_picker\").value,\n          completed: document.getElementById(\"item_completed_checkbox\").checked\n        };\n        if (newItem.description === \"\") newItem.description = \"Unknown\";\n        if (newItem.assigned_to === \"\") newItem.assigned_to = \"Unknown\";\n        this.state.currentList.items.push(newItem);\n      } else {\n        let temp = this.state.todoItem;\n\n        if (temp.description !== document.getElementById(\"item_description_textfield\").value) {\n          if (document.getElementById(\"item_description_textfield\").value === \"\") {\n            temp.description = \"Unknown\";\n          } else temp.description = document.getElementById(\"item_description_textfield\").value;\n        }\n\n        if (temp.assigned_to !== document.getElementById(\"item_assigned_to_textfield\").value) {\n          if (document.getElementById(\"item_assigned_to_textfield\").value === \"\") {\n            temp.assigned_to = \"Unknown\";\n          } else temp.assigned_to = document.getElementById(\"item_assigned_to_textfield\").value;\n        }\n\n        if (temp.due_date !== document.getElementById(\"item_due_date_picker\").value) {\n          temp.due_date = document.getElementById(\"item_due_date_picker\").value;\n        }\n\n        if (temp.completed !== document.getElementById(\"item_completed_checkbox\").checked) temp.completed = document.getElementById(\"item_completed_checkbox\").checked;\n        this.setState({\n          todoItem: temp\n        });\n        this.setState({\n          currentScreen: AppScreen.ITEM_SCREEN\n        });\n      }\n\n      this.loadList(this.state.currentList);\n      this.setState({\n        todoItem: null\n      });\n      this.setState({\n        isEditingItem: false\n      });\n    };\n\n    this.addList = () => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      const newList = {\n        key: this.state.todoLists.length,\n        name: \"Unknown\",\n        owner: \"Unknown\",\n        items: []\n      };\n      this.setState({\n        todoLists: [...this.state.todoLists, newList]\n      });\n      this.setState({\n        currentList: newList\n      });\n      this.loadList(newList);\n    };\n\n    this.showDialog = () => {\n      document.getElementById(\"modal_content\").setAttribute(\"class\", \"slide_in\");\n      document.getElementById(\"modal_yes_no_dialog\").classList.add(\"is_visible\");\n    };\n\n    this.hideDialog = () => {\n      document.getElementById(\"modal_content\").setAttribute(\"class\", \"slide_out\");\n      setTimeout(function () {\n        document.getElementById(\"modal_yes_no_dialog\").classList.remove(\"is_visible\");\n      }, 1500);\n    };\n\n    this.deleteList = () => {\n      const index = this.state.todoLists.indexOf(this.state.currentList);\n      this.state.todoLists.splice(index, 1);\n      this.loadList();\n      this.goHome();\n    };\n\n    this.processSortItemsByTask = () => {\n      // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\n      if (this.state.sortingCriteria === \"sort_by_task_increasing\") {\n        this.sortTasks(\"sort_by_task_decreasing\");\n      } // ALL OTHER CASES SORT BY INCREASING\n      else {\n          this.setState({\n            sortingCriteria: \"sort_by_task_increasing\"\n          });\n          this.sortTasks(\"sort_by_task_increasing\");\n        }\n    };\n\n    this.processSortItemsByDueDate = () => {\n      // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\n      if (this.state.sortingCriteria === \"sort_by_due_date_increasing\") {\n        this.sortTasks(\"sort_by_due_date_decreasing\");\n      } // ALL OTHER CASES SORT BY INCREASING\n      else {\n          this.setState({\n            sortingCriteria: \"sort_by_due_date_increasing\"\n          });\n          this.sortTasks(\"sort_by_due_date_increasing\");\n        }\n    };\n\n    this.processSortItemsByStatus = () => {\n      // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\n      if (this.state.sortingCriteria === \"sort_by_status_increasing\") {\n        this.sortTasks(\"sort_by_status_decreasing\");\n      } // ALL OTHER CASES SORT BY INCREASING\n      else {\n          this.setState({\n            sortingCriteria: \"sort_by_status_increasing\"\n          });\n          this.sortTasks(\"sort_by_status_increasing\");\n        }\n    };\n\n    this.sortTasks = sortingCriteria => {\n      this.setState({\n        sortingCriteria: sortingCriteria\n      }); //this.state.sortingCriteria = sortingCriteria;\n\n      this.state.currentList.items.sort(this.compare);\n      this.loadList(this.state.currentList);\n    };\n\n    this.compare = (item1, item2) => {\n      // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\n      if (this.state.sortingCriteria === \"sort_by_task_decreasing\" || this.state.sortingCriteria === \"sort_by_status_decreasing\" || this.state.sortingCriteria === \"sort_by_due_date_decreasing\") {\n        let temp = item1;\n        item1 = item2;\n        item2 = temp;\n      } // SORT BY ITEM DESCRIPTION\n\n\n      if (this.state.sortingCriteria === \"sort_by_task_increasing\" || this.state.sortingCriteria === \"sort_by_task_decreasing\") {\n        if (item1.description < item2.description) return -1;else if (item1.description > item2.description) return 1;else return 0;\n      } // SORT BY DUE DATE\n      else if (this.state.sortingCriteria === \"sort_by_due_date_increasing\" || this.state.sortingCriteria === \"sort_by_due_date_decreasing\") {\n          if (item1.due_date < item2.due_date) return -1;else if (item1.due_date > item2.due_date) return 1;else return 0;\n        } // SORT BY COMPLETED\n        else {\n            if (item1.completed < item2.completed) return -1;else if (item1.completed > item2.completed) return 1;else return 0;\n          }\n    };\n\n    this.handleKeyPress = e => {\n      let button = String.fromCharCode(e.which).toLowerCase();\n\n      if (e.ctrlKey && button === 'z') {\n        this.tps.undoTransaction();\n        this.setState({\n          currentScreen: AppScreen.LIST_SCREEN\n        });\n      } else if (e.ctrlKey && button === 'y') {\n        this.tps.doTransaction();\n        this.setState({\n          currentScreen: AppScreen.LIST_SCREEN\n        });\n      }\n    };\n  }\n\n  render() {\n    document.addEventListener('keydown', this.handleKeyPress);\n\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          addList: this.addList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          loadList: this.loadList,\n          showDialog: this.showDialog,\n          deleteList: this.deleteList,\n          hideDialog: this.hideDialog,\n          addList: this.addList,\n          editItem: this.editItem,\n          goItem: this.goItem,\n          processSortItemsByTask: this.processSortItemsByTask,\n          processSortItemsByStatus: this.processSortItemsByStatus,\n          processSortItemsByDueDate: this.processSortItemsByDueDate,\n          addMoveUpTransaction: this.addMoveUpTransaction,\n          addMoveDownTransaction: this.addMoveDownTransaction,\n          addNameChangeTransaction: this.addNameChangeTransaction,\n          addOwnerChangeTransaction: this.addOwnerChangeTransaction,\n          addListItemRemovalTransaction: this.addListItemRemovalTransaction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen //currentScreen={AppScreen.ITEM_SCREEN}\n        , {\n          todoItem: this.state.todoItem,\n          addItem: this.addItem,\n          cancelItemChanges: this.cancelItemChanges,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vash/Desktop/Pam/CSE316/todo_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","jsTPS","MoveUpTransaction","MoveDownTransaction","ListNameChangeTransaction","ListOwnerChangeTransaction","ListItemRemovalTransaction","ListItemEditTransaction","ListItemEdit_Transaction","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","tps","state","currentScreen","todoLists","currentList","todoItem","isEditingItem","sortingCriteria","addMoveUpTransaction","list","item","addTransaction","addMoveDownTransaction","addNameChangeTransaction","newName","addOwnerChangeTransaction","newOwner","addListItemRemovalTransaction","index","addItemEditTransaction","currentItem","editOrNewItem","goHome","setState","goItem","cancelItemChanges","loadList","todoListToLoad","console","log","editItem","addItem","newItem","key","items","length","description","document","getElementById","value","assigned_to","due_date","completed","checked","push","temp","addList","newList","name","owner","showDialog","setAttribute","classList","add","hideDialog","setTimeout","remove","deleteList","indexOf","splice","processSortItemsByTask","sortTasks","processSortItemsByDueDate","processSortItemsByStatus","sort","compare","item1","item2","handleKeyPress","e","button","String","fromCharCode","which","toLowerCase","ctrlKey","undoTransaction","doTransaction","render","addEventListener","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\nimport jsTPS from './jTPS/src/jtps/jsTPS'\nimport MoveUpTransaction from './jTPS/src/jtps/MoveUp_Transaction'\nimport MoveDownTransaction from './jTPS/src/jtps/MoveDown_Transaction'\nimport ListNameChangeTransaction from './jTPS/src/jtps/ListNameChange_Transaction'\nimport ListOwnerChangeTransaction from './jTPS/src/jtps/ListOwnerChange_Transaction'\nimport ListItemRemovalTransaction from './jTPS/src/jtps/ListItemRemoval_Transaction'\nimport ListItemEditTransaction from './jTPS/src/jtps/ListItemEdit_Transaction'\nimport ListItemEdit_Transaction from './jTPS/src/jtps/ListItemEdit_Transaction';\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  tps = new jsTPS();\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    todoItem: null,\n    isEditingItem: false,\n    sortingCriteria: null,\n  }\n\n  addMoveUpTransaction = (list, item) => {\n    this.tps.addTransaction(new MoveUpTransaction(list, item));\n  }\n\n  addMoveDownTransaction = (list, item) => {\n    this.tps.addTransaction(new MoveDownTransaction(list, item));\n  }\n\n  addNameChangeTransaction = (list, newName) => {\n    this.tps.addTransaction(new ListNameChangeTransaction(list, newName));\n  }\n\n  addOwnerChangeTransaction = (list, newOwner) => {\n    this.tps.addTransaction(new ListOwnerChangeTransaction(list, newOwner));\n  }\n\n  addListItemRemovalTransaction = (list, item, index) => {\n    this.tps.addTransaction(new ListItemRemovalTransaction(list, item, index));\n  }\n  \n  addItemEditTransaction = (list, currentItem, editOrNewItem, isEditingItem) => {\n    this.tps.addTransaction(new ListItemEdit_Transaction(list, currentItem, editOrNewItem, isEditingItem));\n  }\n\n  goHome = () => {\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n    this.setState({currentList: null});\n  }\n\n  goItem = () => {\n    this.setState( {currentScreen: AppScreen.ITEM_SCREEN});\n  }\n\n  cancelItemChanges = () => {\n    this.setState( {currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({todoItem: null});\n    this.setState({isEditingItem: false});\n  }\n  loadList = (todoListToLoad) => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    this.setState({currentList: todoListToLoad});\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n  \n  editItem = (currentItem) => {\n    this.setState({isEditingItem: true});\n    this.setState({todoItem:currentItem});\n    this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n  }\n  addItem = () => {\n    if (this.state.isEditingItem === false) {\n      const newItem = {\n        key: this.state.currentList.items.length,\n        description: document.getElementById(\"item_description_textfield\").value,\n        assigned_to: document.getElementById(\"item_assigned_to_textfield\").value,\n        due_date: document.getElementById(\"item_due_date_picker\").value,\n        completed: document.getElementById(\"item_completed_checkbox\").checked,\n      }\n      if (newItem.description === \"\")\n        newItem.description = \"Unknown\";\n      if (newItem.assigned_to === \"\")\n        newItem.assigned_to = \"Unknown\";\n      this.state.currentList.items.push(newItem);\n    }\n    else {\n      let temp = this.state.todoItem;\n      if (temp.description !== document.getElementById(\"item_description_textfield\").value) {\n        if (document.getElementById(\"item_description_textfield\").value === \"\") {\n          temp.description = \"Unknown\";\n        }\n        else \n          temp.description = document.getElementById(\"item_description_textfield\").value;\n      }\n      if (temp.assigned_to !== document.getElementById(\"item_assigned_to_textfield\").value) {\n        if (document.getElementById(\"item_assigned_to_textfield\").value === \"\") {\n          temp.assigned_to = \"Unknown\";\n        }\n        else \n          temp.assigned_to = document.getElementById(\"item_assigned_to_textfield\").value;\n      }\n      if (temp.due_date !== document.getElementById(\"item_due_date_picker\").value) {\n        temp.due_date = document.getElementById(\"item_due_date_picker\").value;\n      }\n      if (temp.completed !== document.getElementById(\"item_completed_checkbox\").checked)\n        temp.completed = document.getElementById(\"item_completed_checkbox\").checked;\n\n      this.setState({todoItem: temp});\n      this.setState({currentScreen: AppScreen.ITEM_SCREEN});\n    }\n    this.loadList(this.state.currentList);\n    this.setState({todoItem: null});\n    this.setState({isEditingItem:false});\n  }\n  addList = () => {\n    this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    const newList = {\n      key: this.state.todoLists.length,\n      name: \"Unknown\",\n      owner: \"Unknown\",\n      items: []\n    }\n    this.setState( { todoLists: [...this.state.todoLists, newList]});\n    this.setState( {currentList: newList});\n    this.loadList(newList);\n  }\n\n  showDialog = () => {\n    document.getElementById(\"modal_content\").setAttribute(\"class\",\"slide_in\");\n    document.getElementById(\"modal_yes_no_dialog\").classList.add(\"is_visible\");\n  }\n\n  hideDialog = () => {\n    document.getElementById(\"modal_content\").setAttribute(\"class\", \"slide_out\");\n    setTimeout(function() {\n        document.getElementById(\"modal_yes_no_dialog\").classList.remove(\"is_visible\");\n    },1500)\n  }\n\n  deleteList = () => {\n    const index = this.state.todoLists.indexOf(this.state.currentList);\n    this.state.todoLists.splice(index, 1);\n    this.loadList();\n    this.goHome();\n  }\n\n  processSortItemsByTask = () =>{\n    // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\n    if (this.state.sortingCriteria===\"sort_by_task_increasing\") {\n        this.sortTasks(\"sort_by_task_decreasing\");\n    }\n    // ALL OTHER CASES SORT BY INCREASING\n    else {\n      this.setState({sortingCriteria:\"sort_by_task_increasing\"});\n      this.sortTasks(\"sort_by_task_increasing\");\n    }\n  }\n  processSortItemsByDueDate = () =>{\n    // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\n    if (this.state.sortingCriteria===\"sort_by_due_date_increasing\") {\n        this.sortTasks(\"sort_by_due_date_decreasing\");\n    }\n    // ALL OTHER CASES SORT BY INCREASING\n    else {\n      this.setState({sortingCriteria:\"sort_by_due_date_increasing\"});\n      this.sortTasks(\"sort_by_due_date_increasing\");\n    }\n  }\n  processSortItemsByStatus = () =>{\n    // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\n    if (this.state.sortingCriteria===\"sort_by_status_increasing\") {\n        this.sortTasks(\"sort_by_status_decreasing\");\n    }\n    // ALL OTHER CASES SORT BY INCREASING\n    else {\n      this.setState({sortingCriteria:\"sort_by_status_increasing\"});\n      this.sortTasks(\"sort_by_status_increasing\");\n    }\n  }\n  sortTasks = (sortingCriteria) => {\n      this.setState( {sortingCriteria: sortingCriteria});\n      //this.state.sortingCriteria = sortingCriteria;\n      this.state.currentList.items.sort(this.compare);\n      this.loadList(this.state.currentList);\n  }\n  compare = (item1, item2) => {\n    // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\n    if (this.state.sortingCriteria===\"sort_by_task_decreasing\"\n        || this.state.sortingCriteria===\"sort_by_status_decreasing\"\n        || this.state.sortingCriteria===\"sort_by_due_date_decreasing\") {\n        let temp = item1;\n        item1 = item2;\n        item2 = temp;\n    }\n    // SORT BY ITEM DESCRIPTION\n    if (this.state.sortingCriteria===\"sort_by_task_increasing\"\n        || this.state.sortingCriteria===\"sort_by_task_decreasing\") {\n        if (item1.description < item2.description)\n            return -1;\n        else if (item1.description > item2.description)\n            return 1;\n        else\n            return 0;\n    }\n    // SORT BY DUE DATE\n    else if (this.state.sortingCriteria===\"sort_by_due_date_increasing\"\n              || this.state.sortingCriteria===\"sort_by_due_date_decreasing\") {\n      if (item1.due_date < item2.due_date)\n        return -1;\n      else if (item1.due_date > item2.due_date)\n        return 1;\n      else\n        return 0;\n    }\n    // SORT BY COMPLETED\n    else {\n      if (item1.completed < item2.completed)\n        return -1;\n      else if (item1.completed > item2.completed)\n        return 1;\n      else\n        return 0;\n    }\n  }\n\n  handleKeyPress = (e) => {\n    let button = String.fromCharCode(e.which).toLowerCase();\n    if (e.ctrlKey && button === 'z') {\n      this.tps.undoTransaction();\n      this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    }\n    else if (e.ctrlKey && button === 'y') {\n      this.tps.doTransaction();\n      this.setState({currentScreen: AppScreen.LIST_SCREEN});\n    }\n  }\n  render() {\n    document.addEventListener('keydown', this.handleKeyPress);\n    switch(this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen \n        loadList={this.loadList.bind(this)} \n        todoLists={this.state.todoLists} \n        addList={this.addList}/>;\n      case AppScreen.LIST_SCREEN:            \n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          loadList={this.loadList} \n          showDialog={this.showDialog}\n          deleteList={this.deleteList}\n          hideDialog={this.hideDialog}\n          addList={this.addList}\n          editItem={this.editItem}\n          goItem={this.goItem}\n          processSortItemsByTask={this.processSortItemsByTask}\n          processSortItemsByStatus={this.processSortItemsByStatus}\n          processSortItemsByDueDate={this.processSortItemsByDueDate}\n          addMoveUpTransaction={this.addMoveUpTransaction}\n          addMoveDownTransaction={this.addMoveDownTransaction}\n          addNameChangeTransaction={this.addNameChangeTransaction}\n          addOwnerChangeTransaction={this.addOwnerChangeTransaction}\n          addListItemRemovalTransaction={this.addListItemRemovalTransaction}/>;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n        //currentScreen={AppScreen.ITEM_SCREEN}\n        todoItem={this.state.todoItem}\n        addItem={this.addItem}\n        cancelItemChanges={this.cancelItemChanges}\n        />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}